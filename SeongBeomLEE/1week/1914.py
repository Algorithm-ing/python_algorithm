"""
단계를 나누어 생각한다.

- 가장 큰 원판을 마지막 기둥으로 옮기는 것이 목표
- 가장 큰 원판을 마지막 기둥으로 옮기기 위해서는 두번째 기둥에 n - 1개의 원판이 모여야함
- 가장 큰 원판을 마지막 기둥으로 옮겼으면, 두번째 기둥에 있는 n - 1개의 원판을 마지막 기둥으로 옮겨야 함

3 -> 7
8

4 -> 15
16

5 -> 31
32

6 -> 63
64

7 -> 127
8 -> 255

최소 경로는 2**N - 1 임
"""
def hanoi(n:int, start:str, end:str, mid:str):
    if n == 1:
        print(start, end)
    else:
        # 두번째 기둥으로 n -1 개의 원판을 이동, 해당 경우에 두번째 기둥과 같은 기능을 하는 기둥은 마지막 기둥임
        hanoi(n - 1, start, mid, end)
        # 가장 큰 원판을 마지막 기둥으로 이동
        print(start, end)
        # 두번째 기둥에 모여있는 원판을 마지막 기둥으로 이동, 해당 경우에 두번째 기둥과 같은 기능을 하는 기둥은 첫번째 기둥임
        hanoi(n - 1, mid, end, start)

N = int(input())
print(2**N - 1)
if N <= 20:
    hanoi(N, "1", "3", "2")



